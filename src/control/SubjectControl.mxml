<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" width="700" height="700" borderVisible="false" backgroundAlpha="0" xmlns:uicontrol="uicontrol.*">
	<fx:Script>
		<![CDATA[
			import events.AutoGridEvent;
			import events.ChangeUserEvent;
			import events.CloseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;

        [Bindable]
        private var buttonArr0:ArrayCollection = new ArrayCollection([
            {'label': '全部', 'mode': 'all'},
            {'label': '未读信息', 'mode': 'unread'},
            {'label': '已读信息', 'mode': 'read'}
        ]);
        [Bindable]
        private var buttonArr1:ArrayCollection = new ArrayCollection([
            {'label': '刷新', 'ico': refreshimg, 'mode': 'refresh'},
            {'label': '写信息', 'ico': wximg, 'mode': 'add'}
        ]);
        [Bindable]
        private var buttonArr2:ArrayCollection = new ArrayCollection([
            {'label': '回复', 'ico': saveimg, 'mode': 'huifu'},
            {'label': '转发', 'ico': saveimg, 'mode': 'add'}
        ]);
        [Bindable]
        private var buttonArr3:ArrayCollection = new ArrayCollection([
            {'label': '标记已读', 'ico': saveimg, 'mode': 'read'},
            {'label': '标记未读', 'ico': saveimg, 'mode': 'unread'}
        ]);

        [Bindable]
        private var subjectList:ArrayCollection = new ArrayCollection([
			{title:"java试题",kinds:"java>面向对象",bz:"对于面向对象的理解",rightnum:0,wrongnum:0,accuracy:0},
			{title:"java试题",kinds:"java>面向对象",bz:"对于面向对象的理解",rightnum:0,wrongnum:0,accuracy:0}
		]);
        private var messageWin:MessagePanel;
        //新增，保存，删除,回复，转发的处理函数
        //多个按钮点击事件的处理函数
        private function clickHander(e:ItemClickEvent):void {
            if (e.item.mode == 'add') {
                if (messageWin == null) {
                    messageWin = new MessagePanel();
                    messageWin.title = "发送信息";
                }
                PopUpManager.addPopUp(messageWin, FlexGlobals.topLevelApplication as DisplayObject);
                PopUpManager.bringToFront(messageWin);
                PopUpManager.centerPopUp(messageWin);
            }


        }



        override public function init(e:FlexEvent):void {
			optionGrid.dataProvider=new ArrayCollection();
			optionGrid.dataProvider.addAll(new ArrayCollection([{}]));
        }

        override public function changeCurrentUser(e:ChangeUserEvent):void {

        }

        override public function closeContainer(e:CloseEvent):void {

        }

        // 重新进入时执行
        override public function reloadParamData(e:FlexEvent):void {
        }


		protected function optionGrid_optionHandler(event:AutoGridEvent):void
		{	
			var data:Object=event.data;
			if(event.type==AutoGridEvent.DELETE){
				if(data["id"]==""){
					var dataProvider:ArrayCollection=optionGrid.dataProvider as ArrayCollection;
					dataProvider.removeItemAt(data.rowIndex);
				}
			}
		}

        ]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer top="5" bottom="5" left="5" right="5"  borderVisible="false" color="0x333333" skinClass="skins.contentBoxSkin">
		<s:layout>
			<s:VerticalLayout>
				
			</s:VerticalLayout>
		</s:layout>
		<s:BorderContainer left="0" top="0" height="45" width="100%" borderVisible="false" backgroundImage="{CBorderContainer.toolbgimg}">
			<s:layout>
				<s:HorizontalLayout gap="20" verticalAlign="middle" paddingLeft="20">
					
				</s:HorizontalLayout>
			</s:layout>
			<s:HGroup height="20">
				<s:Label text="关键字" height="100%" verticalAlign="middle">
				</s:Label>
				<s:TextInput height="100%">
				</s:TextInput>
			</s:HGroup>
			<s:ButtonBar id="ba1" dataProvider="{buttonArr1}" selectedIndex="0" doubleClickEnabled="true"  chromeColor="#faf0cc"  labelField="label" iconField="ico"  height="30"  requireSelection="true">
			</s:ButtonBar>
		</s:BorderContainer>
		<s:BorderContainer height="100%" width="100%" borderVisible="false"  >
			<s:layout>
				<s:HorizontalLayout gap="2">
					
				</s:HorizontalLayout>
			</s:layout>
			<s:VGroup height="100%" width="430" >
				<mx:DataGrid id="subjectGrid" height="100%" width="100%" dataProvider="{subjectList}">
					<mx:columns>
						<mx:DataGridColumn headerText="题目" dataField="title">
							
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="分类" dataField="kinds">
							
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="正确率" dataField="accuracy">
							
						</mx:DataGridColumn>
					</mx:columns>
				</mx:DataGrid>
				<uicontrol:Pageing id="pagebar1" infolbl="false">
				</uicontrol:Pageing>
			</s:VGroup>
			<s:BorderContainer width="100%" height="100%" borderVisible="true">
				<s:layout>
					<s:HorizontalLayout>
						
					</s:HorizontalLayout>
				</s:layout>
				<s:Form width="100%" height="100%">
					<s:FormItem label="题目">
						<s:TextInput id="typeName" maxChars="200" width="200" prompt="新增题目" height="100%">
						</s:TextInput>
					</s:FormItem>
					<s:FormItem label="分类">
						<mx:ComboBox id="subKind" width="200" height="100%">
						</mx:ComboBox>
					</s:FormItem>
					<mx:FormItem width="400" minWidth="400">
						<uicontrol:AutoGrid editable="true" id="optionGrid" width="100%" option="optionGrid_optionHandler(event)">
							<uicontrol:columns>
								<mx:DataGridColumn headerText="选项内容" dataField="content">
								</mx:DataGridColumn>
								<mx:DataGridColumn headerText="是否正确" dataField="is_right" width="70" editable="false">
									<mx:itemRenderer>
										<fx:Component>
											<mx:Canvas width="100%">
												<mx:VBox horizontalAlign="center" width="100%">
													<fx:Script>
														<![CDATA[
															import mx.events.ListEvent;
															private var _data:Object;
															override public function set data(o:Object):void{
																_data=o;
																is_right.selected=o["is_right"];
															}
															private function clickHandler():void{
																_data["is_right"]=is_right.selected;
																dispatchEvent(new ListEvent(ListEvent.ITEM_CLICK,false,false,-1,-1,null,this));
															}
														]]>
													</fx:Script>
													<mx:CheckBox id="is_right" click="clickHandler()">
													</mx:CheckBox>
												</mx:VBox>
											</mx:Canvas>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</uicontrol:columns>
						</uicontrol:AutoGrid>
					</mx:FormItem>
					<mx:ControlBar>
						<s:Button id="savBtn" label="保存" color="white" chromeColor="red" height="25">
						</s:Button>
						<s:Button id="delBtn" label="删除" height="25"  enabled="false">
						</s:Button>
					</mx:ControlBar>
				</s:Form>
			</s:BorderContainer>
			
		</s:BorderContainer>
	</s:BorderContainer>
</control:CBorderContainer>
