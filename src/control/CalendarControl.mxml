<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" 
						  xmlns:uicontrol="uicontrol.*"
						  width="700" height="500" borderVisible="false" backgroundAlpha="0">
	<fx:Script>
		<![CDATA[
			import events.ChangeUserEvent;
			import events.CloseEvent;
			import events.PageChangeEvent;
			
			import httpcontrol.CHTTPService;
			import httpcontrol.HttpServiceUtil;
			
			import model.DeptModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import uicontrol.DayItem;
			import uicontrol.GroupItem;
			
			import util.DateUtil;
			import util.ToolUtil;
			
			[Bindable]
			private var list:ArrayCollection=new ArrayCollection();
			
			
			override public   function  init(e:FlexEvent):void{
				dateChooser.selectedDate = new Date();
			
				showCalendar();
				if(ToolUtil.groupList.length==0){
					ToolUtil.groupRefresh(regetGroup);
				}else{
					regetGroup();
				}
			}
			override public function changeCurrentUser(e:ChangeUserEvent):void{
				regetSchedule();
			}
			override public function closeContainer(e:CloseEvent):void{
				dispatchEvent(e);
				
			}
			
			
			
			public function regetSchedule():void{
				var dayItem:DayItem=null;
				for(var  i:Number=0;i<100;i++){
					if(calendarPanel.numElements-1<i){
						break;
					}else{
						dayItem = calendarPanel.getElementAt(i) as DayItem;
						
						dayItem.init();
					}
				}
				if(calendarPanel.numElements>0){
					ToolUtil.getScheduleByDate((calendarPanel.getElementAt(0) as DayItem).date,(calendarPanel.getElementAt(calendarPanel.numElements-1) as DayItem).date);
				}
				regetGroup();
			}
			
			public function regetGroup(result:Object=null,e:ResultEvent=null):void{
				
				mygrouppanel.removeAllElements();
				joingrouppanel.removeAllElements();
				
				var groupItem:GroupItem=null;
				var obj:Object = null;
				var h:Number=0;
				for(var i:Number=ToolUtil.groupList.length-1;i>=0;i--){
					groupItem = new GroupItem();
					h = groupItem.height;
					obj = ToolUtil.groupList.getItemAt(i);
					groupItem.color = obj.color;
					groupItem.groupId = obj.id;
					groupItem.groupName = obj.name;
					groupItem.groupData = obj;
					groupItem.fun=showGroup;
					groupItem.isshow=true;
					
					if(obj.author == ToolUtil.sessionUser.id){
//						datePanel.addElementAt(groupItem,datePanel.getElementIndex(mygrouplbl)+1);
						mygrouppanel.addElement(groupItem)
					}else{
//						datePanel.addElementAt(groupItem,datePanel.getElementIndex(myjoingrouplbl)+1);
						joingrouppanel.addElement(groupItem);
					}
				}
				mygrouppanel.height=h*mygrouppanel.numElements;
				joingrouppanel.height=h*joingrouppanel.numElements;
				datePanel.invalidateSize();
			}
			
			public function showGroup(group:GroupItem,g:Object):void{
				if(group.isshow){
					group.color = 0xffffff;
					group.isshow = false;
				}else{
					group.color = g.color;
					group.isshow = true;
				}
				
				var dayItem:DayItem=null;
				for(var  i:Number=0;i<100;i++){
					if(calendarPanel.numElements-1<i){
						break;
					}else{
						dayItem = calendarPanel.getElementAt(i) as DayItem;
						
						dayItem.showSchedule(g.id,group.isshow);
						
					}
				}
			}
			
			
			private var currentMonth:Number=0;
			
			private function showCalendar(date:Date=null):void{
				if(date==null){
					date = new Date();
				}else{
					date = new Date(date.fullYear,date.month,date.date);
					
				}
				if(currentMonth==date.month){
					return;
				}
				currentMonth=date.month;
				if(date.date!=1){
					date.date=1;
				}
				if(date.day!=0){
					date.date -= date.day;
				}
				var fr:DateFormatter=new DateFormatter();
				fr.formatString="YYYYMMDD";
//				calendarPanel.removeAllElements();
				var dayItem:DayItem=null;
				var newDayItem:DayItem=null;
				var f:Boolean=true;
				var count:Number=0;
				for(var i:Number=0;i<100;i++){
					if(calendarPanel.numElements-1<i){
						dayItem = new DayItem();
						newDayItem = dayItem;
						calendarPanel.addElement(dayItem);
						f = true;
					}else{
						dayItem = calendarPanel.getElementAt(i) as DayItem;
						f = false;
					}
					dayItem.date = fr.format(date);
					dayItem.nowdate = fr.format(dateChooser.selectedDate);
					
					if(!f){
						dayItem.init();
					}
					
					date.date+=1;
					if(currentMonth<date.month&&date.day==0){
						count=i+1;
						break;
					}
				}
				for(i=calendarPanel.numElements-1;i>=count;i--){
					calendarPanel.removeElementAt(i);
				}
				if(calendarPanel.numElements>0){
					ToolUtil.getScheduleByDate((calendarPanel.getElementAt(0) as DayItem).date,(calendarPanel.getElementAt(calendarPanel.numElements-1) as DayItem).date);
				}
				resize();
				if (newDayItem!=null){
					newDayItem.addEventListener(FlexEvent.CREATION_COMPLETE,resize);
				}
				
			}
			[Bindable]
			private var dayWidth:Number=0;
			private function resize(e:FlexEvent=null):void{
				var dayItem:DayItem=null;
				var row:Number = calendarPanel.numElements/7;
				var dayHeight:Number=(this.height - 26-row+1-2-10)/row;
				dayWidth = (this.width - 12-taskPanel.width-190-7+1)/7;
				for(var  i:Number=0;i<100;i++){
					if(calendarPanel.numElements-1<i){
						break;
					}else{
						dayItem = calendarPanel.getElementAt(i) as DayItem;
						dayItem.height = dayHeight;
						dayItem.width = dayWidth;
						dayItem.invalidateSize();
						
					}
				}
				calendarPanel.invalidateSize();
			}
			
			public function save(e:Event):void{
				var http:CHTTPService=HttpServiceUtil.getCHTTPServiceAndResult("_100_BaseInfosAction_saveOrUpdateAreaPoint.action",saveDataResult,"POST");
				var o:Object=getData();
				if(o==null){
					return;
				}
				http.send(o);
			}
			public function getData():Object{
				var o:Object={};
				
				return o;
			}
			
			private function saveDataResult(result:Object,e:ResultEvent):void{
				if(result.message.success){
//					idField.text=result.message.result.id;
					
					ToolUtil.areaRefresh(refresh);
				}
			}
//			private function loadData():void{
//				var http:CHTTPService=HttpServiceUtil.getCHTTPServiceAndResultAndFault("/htcsgl/_100_BaseInfosAction_finddeptall.action",loadDataResult,loadDataFault,"POST");
//				http.send();
//			}
//			private function loadDataResult(resutl:Object,e:ResultEvent):void{
//				
//				
//			}
			private function loadDataFault(e:FaultEvent):void{
				Alert.show('操作失败',"提示");
			}
			
			private function pagechange(e:PageChangeEvent):void
				
			{
				
//				datalist.dataProvider = e.Filter(datas)
				
			}
			
			//新增，保存，删除的处理函数
			private function clickHander(e:ItemClickEvent):void{
				if(e.label=="新增"){
					add();
				}
				if(e.label=="修改"){
				}
				if(e.label=="删除"){
					del();
				}
				if(e.label=='同步数据'){
//					InfoUtil.userRefresh(refreshScx);
					ToolUtil.areaRefresh(refresh);
				}
				//				if(e.label=='测试打开部门管理'){
				//					var obj:Object=new Object();
				//					obj['test']="测试";
				//					var evt:ChangeMenuEvent=new ChangeMenuEvent(ChangeMenuEvent.ChangeMenu_EventStr,"dept",obj,true)
				//					dispatchEvent(evt);
				//				}
				
			}
			
			public function add():void{
			}
			public function del():void{
				var userArr:ArrayCollection=new ArrayCollection();
				var obj:Object;
				var item:Object;
				for(var i:int=list.length-1;i>=0;i--){
					item=list.getItemAt(i);
					if(!item.selected){
						continue;
					}
					obj=new Object();
					if(item.hasOwnProperty("id")){
						obj.id=item.id;
						userArr.addItem(obj);
					}
					//					obj.name=item.name;
					
				}
				if(userArr.length>0){
					ToolUtil.areaRefresh(refresh);
//					HttpServiceUtil.getCHTTPServiceAndResultAndFault("/htcsgl/_100_BaseInfosAction_deletedept.action",loadDataResult,loadDataFault,"POST").send(userArr);
				}
			}
			
			public function show(obj:Object):void{
				
				
			}
			
			
			
			public function refresh(result:Object,e:ResultEvent):void{
				if(result.message.success){
					add();
					init(null);
//					InfoUtil.userRefresh(refreshScx);
				}
			}
			
			public function createSchedule():void{
				var s:SchedulePanel = PopUpManager.createPopUp(this,SchedulePanel,false) as SchedulePanel;
				PopUpManager.centerPopUp(s);
			}
			
			private function changeDate():void{
				showCalendar(dateChooser.selectedDate);
			}
			
			private function showTask():void{
				if(taskPanel.width>100){
					taskPanel.width=0;
					mytask.color = 0xffffff;
				}else{
					mytask.color = 0x00CCCC;
					taskPanel.width=200;
					
				}
				resize();
				this.invalidateSize();
			}
			
			[Bindable]
			private var buttonArr:ArrayCollection=new ArrayCollection([{'label':'新增','ico':addimg},{'label':'修改','ico':saveimg},{'label':'同步数据','ico':refreshimg}]);
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:DateFormatter id="monthstr" formatString="YYYY年MM月" >
			
		</mx:DateFormatter>
	</fx:Declarations>
	
	<s:BorderContainer top="5" bottom="5" left="5" right="5"  borderVisible="false">
		<s:layout>
			<s:HorizontalLayout gap="0">
				
			</s:HorizontalLayout>
		</s:layout>
		<s:Scroller  width="190" height="100%">
			<s:Group>
				<s:BorderContainer id="datePanel" width="100%" borderVisible="false" >
					<s:layout>
						<s:VerticalLayout gap="5" paddingLeft="5" paddingTop="10">
						</s:VerticalLayout>
					</s:layout>
					<s:Button chromeColor="red" label="创建日程" color="#ffffff" fontWeight="bold"  height="25" click="createSchedule()" />
					<s:Label text="{monthstr.format(dateChooser.selectedDate)}" fontSize="18" fontWeight="bold" paddingTop="10" >
						
					</s:Label>
					<mx:DateChooser id="dateChooser" selectedDate="{new Date()}" change="changeDate()" dayNames="{DateUtil.dayNames}" monthNames="{DateUtil.monthNames}" />
					<s:Label id="mygrouplbl" text="我的分组" fontSize="18" fontWeight="bold" paddingTop="10" >
					</s:Label>
					<s:BorderContainer id="mygrouppanel" width="100%" borderVisible="false" >
						<s:layout>
							<s:VerticalLayout>
							</s:VerticalLayout>
						</s:layout>
					</s:BorderContainer>
					<s:Label id="mytasklbl" text="我的任务" fontSize="18" fontWeight="bold" paddingTop="10" >
					</s:Label>
					<uicontrol:ScheduleItem id="mytask" color="#ffffff" scheduleName="任务" fun="showTask"/>
					<s:Label id="myjoingrouplbl" text="参与的分组" fontSize="18" fontWeight="bold" paddingTop="10" >
					</s:Label>
					<s:BorderContainer id="joingrouppanel" width="100%" borderVisible="false"  >
						<s:layout>
							<s:VerticalLayout>
							</s:VerticalLayout>
						</s:layout>
					</s:BorderContainer>
				</s:BorderContainer>
			</s:Group>
		</s:Scroller>
		
		<s:BorderContainer id="rightContainner" width="100%" height="100%" backgroundAlpha="0"  borderVisible="false">
			<s:layout>
				<s:VerticalLayout gap="1">
					
				</s:VerticalLayout>
				
			</s:layout>
			<s:BorderContainer width="100%" height="25" borderVisible="false" backgroundAlpha="0">
				<s:layout>
					<s:HorizontalLayout gap="1" verticalAlign="middle" >
						
					</s:HorizontalLayout>
				</s:layout>
				<s:Label width="{dayWidth}" height="25" fontSize="18" fontWeight="bold" text="星期日" textAlign="center" verticalAlign="middle" />
				<s:Label width="{dayWidth}" height="25" fontSize="18" fontWeight="bold" text="星期一" textAlign="center" verticalAlign="middle" />
				<s:Label width="{dayWidth}" height="25" fontSize="18" fontWeight="bold" text="星期二" textAlign="center" verticalAlign="middle" />
				<s:Label width="{dayWidth}" height="25" fontSize="18" fontWeight="bold" text="星期三" textAlign="center" verticalAlign="middle" />
				<s:Label width="{dayWidth}" height="25" fontSize="18" fontWeight="bold" text="星期四" textAlign="center" verticalAlign="middle" />
				<s:Label width="{dayWidth}" height="25" fontSize="18" fontWeight="bold" text="星期五" textAlign="center" verticalAlign="middle" />
				<s:Label width="{dayWidth}" height="25" fontSize="18" fontWeight="bold" text="星期六" textAlign="center" verticalAlign="middle" />
					
			</s:BorderContainer>
			<s:BorderContainer width="100%" height="100%" borderVisible="true" borderColor="#999999" backgroundColor="#999999">
				<s:layout>
					<s:VerticalLayout gap="0">
						
					</s:VerticalLayout>
					
				</s:layout>
				<s:TileGroup id="calendarPanel" width="100%" height="100%" requestedColumnCount="7" horizontalGap="1" verticalGap="1"   >
					
				</s:TileGroup>
			</s:BorderContainer>
			
				
		</s:BorderContainer>
		<s:Scroller id="taskPanel"  width="0" height="100%">
			<s:Group>
				<s:BorderContainer width="100%" borderVisible="false" >
					<s:layout>
						<s:VerticalLayout gap="5" paddingLeft="5" paddingTop="10">
						</s:VerticalLayout>
					</s:layout>
					<s:Label text="我的任务" fontSize="18" fontWeight="bold" paddingTop="10" >
					</s:Label>
				</s:BorderContainer>
			</s:Group>
		</s:Scroller>
	</s:BorderContainer>
</control:CBorderContainer>
