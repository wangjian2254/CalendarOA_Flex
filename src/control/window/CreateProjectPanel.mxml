<?xml version="1.0" encoding="utf-8"?>
<window:EfficientTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx"
                             width="500"  creationComplete="init()"
                             title="创建项目" xmlns:window="control.window.*">
    <fx:Script>
		<![CDATA[
        import httpcontrol.HttpServiceUtil;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.CollectionEvent;
        import mx.rpc.events.ResultEvent;
        import mx.utils.ObjectUtil;

        import util.DateUtil;
        import util.ToolUtil;




        [Bindable]
        private var myprojectList:ArrayCollection = new ArrayCollection();
        [Bindable]
        private var managerList:ArrayCollection = new ArrayCollection();

        public var projectData:Object;

        override public function releaseListener(e:CloseEvent):void {
            ToolUtil.projectList.removeEventListener(CollectionEvent.COLLECTION_CHANGE, projectRefresh);
        }

        private function projectRefresh(e:CollectionEvent):void {
            myprojectList.addItem({id: 0, name: "无"});
            myprojectList.addAll(ObjectUtil.copy(ToolUtil.allProjectList) as ArrayCollection)
        }

        private function init():void {
            ToolUtil.projectList.addEventListener(CollectionEvent.COLLECTION_CHANGE, projectRefresh);
            projectRefresh(null);
            if (projectData == null) {
                fatherDownList.selectedIndex = 0;

                refreshManager();

            } else {
                projectname.text = projectData.name;
                projectdesc.text = projectData.desc;
                colorClick(projectData.color);
                startDate.selectedDate = DateUtil.parseLblDate(projectData.start_date);
                if (projectData.hasOwnProperty("end_date")) {
                    endDate.selectedDate = DateUtil.parseLblDate(projectData.end_date);
                }
                fatherDownList.selectedIndex = 0;
                for each(var p:Object in myprojectList) {
                    if (p.id == projectData.father) {
                        fatherDownList.selectedItem = p;
                    }
                }
                fatherDownList.selectedIndex = 0;
                for each(var d:Object in ToolUtil.myDepartmentList) {
                    if (d.id == projectData.department) {
                        departmentDownList.selectedItem = d;
                    }
                }
                refreshManager();
                for each(var p in managerList) {
                    if (p.id == projectData.manager) {
                        managerDownList.selectedItem = p;
                    }
                }


            }

        }

        private function refreshManager():void {
            var manager:Object = managerDownList.selectedItem;
            if (departmentDownList.selectedItem.id == 0) {
                managerList = new ArrayCollection();
                managerList.addItem(ToolUtil.getActivePersonById(ToolUtil.sessionUser.pid));
                managerDownList.selectedIndex = 0;
                managerDownList.enabled = false;
            } else {
                managerDownList.enabled = true;
                managerList = ObjectUtil.copy(departmentDownList.selectedItem.children) as ArrayCollection;
                if (managerList == null) {
                    managerList = new ArrayCollection();
                }
                var f:Boolean = false;
                for each(var person:Object in managerList) {
                    if (person.id == ToolUtil.sessionUser.pid) {
                        f = true;
                        managerDownList.selectedItem = person;
                    }
                }
                if (!f) {
                    for each(var p:Object in ToolUtil.memberList) {
                        if (p.id == ToolUtil.sessionUser.pid) {
                            managerList.addItem(p);
                            managerDownList.selectedItem = p;
                        }
                    }
                }
                if (manager != null) {
                    managerDownList.selectedIndex = -1;
                    for each(var p in managerList) {
                        if (p.id == manager.id) {
                            managerDownList.selectedItem = p;
                        }
                    }
                }
            }

        }


        private function getOrgByFlagResult(result:Object, e:ResultEvent):void {
            this.title = result.result.name + " 新成员注册";
        }

        public function save():void {
            if (projectname.text == "") {
                Alert.show("项目名称必须填写", "提示");
                return;
            }
            if (projectdesc.text == "") {
                Alert.show("项目描述必须填写", "提示");
                return;
            }
            if (startDate.selectedDate == null) {
                Alert.show("项目开始日期必须填写", "提示");
                return;
            }
            if (endDate.selectedDate == null) {
                Alert.show("项目结束日期必须填写", "提示");
                return;
            }

            var obj:Object = new Object();

            if (projectData != null) {
                obj.id = projectData.id;
            }
            obj.name = projectname.text;
            obj.desc = projectdesc.text;
            obj.color = selectColor;
            obj.manager = managerDownList.selectedItem.id;
            obj.father = fatherDownList.selectedItem.id;
            obj.department = departmentDownList.selectedItem.id;
            obj.status = statusDownList.selectedItem.id;
            obj.start_date = DateUtil.dateLbl1(startDate.selectedDate);
            if (endDate.selectedDate != null) {
                obj.end_date = DateUtil.dateLbl1(endDate.selectedDate);
            }


            HttpServiceUtil.getCHTTPServiceAndResult("/ca/update_project", refresh, "POST").send(obj);


        }

        public function refresh(r:Object, e:ResultEvent):void {
            ToolUtil.allProjectListRefresh();
            ToolUtil.projectListRefresh();
            closeWin();

        }

        public function foucePass(obj:Object):void {
            obj.setFocus();
        }

        private var selectColor:Number = 0x00CCFF;
        private function colorClick(c:Number):void {
            selectColor = c;
            color0.setStyle("backgroundColor", c);
            color1.setStyle("borderColor", 0xffffff);
            color2.setStyle("borderColor", 0xffffff);
            color3.setStyle("borderColor", 0xffffff);
            color4.setStyle("borderColor", 0xffffff);
            color5.setStyle("borderColor", 0xffffff);
            color6.setStyle("borderColor", 0xffffff);
            color7.setStyle("borderColor", 0xffffff);
            color8.setStyle("borderColor", 0xffffff);
            color9.setStyle("borderColor", 0xffffff);
            color10.setStyle("borderColor", 0xffffff);
            switch (c) {
                case 0xaecfea:
                    color1.setStyle("borderColor", 0x000000);
                    break;
                case 0x5484ed:
                    color2.setStyle("borderColor", 0x000000);
                    break;
                case 0xa4bdfc:
                    color3.setStyle("borderColor", 0x000000);
                    break;
                case 0x46d6db:
                    color4.setStyle("borderColor", 0x000000);
                    break;
                case 0x7ae7bf:
                    color5.setStyle("borderColor", 0x000000);
                    break;
                case 0x51b749:
                    color6.setStyle("borderColor", 0x000000);
                    break;
                case 0xfbd75b:
                    color7.setStyle("borderColor", 0x000000);
                    break;
                case 0xffb878:
                    color8.setStyle("borderColor", 0x000000);
                    break;
                case 0xff887c:
                    color9.setStyle("borderColor", 0x000000);
                    break;
                case 0xdbadff:
                    color10.setStyle("borderColor", 0x000000);
                    break;
                default:
                    if (colorPicker.selectedColor != c) {
                        colorPicker.selectedColor = c;
                    }

            }
        }
        private function colorChange():void {
            colorClick(colorPicker.selectedColor);
        }

        ]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>


	<s:Form width="100%" id="form" >


		<s:FormItem  label="项目名称:" textAlign="right">
			<s:layout>
				<s:HorizontalLayout gap="5"/>
			</s:layout>
			<s:TextInput id="projectname"  width="100%"  tabIndex="1" >
				
			</s:TextInput>
            <s:Label text="*" color="red"/>
		</s:FormItem>
        <s:FormItem  label="项目描述:" textAlign="right">
            <s:layout>
                <s:HorizontalLayout gap="5"/>
            </s:layout>
            <s:TextArea id="projectdesc" width="100%" height="60" tabIndex="2"></s:TextArea>
            <s:Label text="*" color="red"/>
        </s:FormItem>
        <s:FormItem  label="父级项目:" textAlign="right">

            <s:DropDownList id="fatherDownList" width="100%" labelField="name" selectedIndex="0" dataProvider="{myprojectList}" tabIndex="3" ></s:DropDownList>
        </s:FormItem>
        <s:FormItem  label="隶属部门:" textAlign="right">
            <s:DropDownList id="departmentDownList" width="100%" labelField="label" selectedIndex="0" dataProvider="{ToolUtil.myDepartmentList}" change="refreshManager()" tabIndex="4" ></s:DropDownList>
        </s:FormItem>
        <s:FormItem  label="负责人:" textAlign="right">
            <s:DropDownList id="managerDownList" width="100%" labelField="name"  dataProvider="{managerList}" tabIndex="5"  ></s:DropDownList>
        </s:FormItem>
        <s:FormItem  label="任务颜色:" toolTip="方便区分任务所属项目，建议同一时间段内的项目使用不同的颜色" textAlign="right">
            <s:layout>
                <s:HorizontalLayout gap="3" />
            </s:layout>
            <s:BorderContainer id="color0" backgroundAlpha="1" backgroundColor="#aecfea" borderColor="#000000" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:Label text="|" fontWeight="bold" fontSize="18" textAlign="center"  width="10" height="25" verticalAlign="middle"/>
            <s:BorderContainer id="color1" click="colorClick(0xaecfea)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#aecfea" borderColor="#000000" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color2" click="colorClick(0x5484ed)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#5484ed" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color3" click="colorClick(0xa4bdfc)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#a4bdfc" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color4" click="colorClick(0x46d6db)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#46d6db" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color5" click="colorClick(0x7ae7bf)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#7ae7bf" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color6" click="colorClick(0x51b749)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#51b749" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color7" click="colorClick(0xfbd75b)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#fbd75b" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color8" click="colorClick(0xffb878)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#ffb878" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color9" click="colorClick(0xff887c)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#ff887c" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <s:BorderContainer id="color10" click="colorClick(0xdbadff)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundAlpha="1" backgroundColor="#dbadff" borderColor="#ffffff" borderWeight="2" width="20" height="20">
            </s:BorderContainer>
            <mx:ColorPicker id="colorPicker" color="#010000" selectedColor="#ffffff" change="colorChange();"
                            symbolColor="#030002">

            </mx:ColorPicker>
        </s:FormItem>
        <s:FormItem  label="开始日期:" textAlign="right">
            <s:layout>
                <s:HorizontalLayout gap="5"/>
            </s:layout>
            <mx:DateField id="startDate" width="150"  formatString="YYYY-MM-DD" dayNames="{DateUtil.dayNames}" monthNames="{DateUtil.monthNames}" tabIndex="6" />
            <s:Label text="*" color="red"/>
        </s:FormItem>
        <s:FormItem  label="结束日期:" textAlign="right">
            <s:layout>
                <s:HorizontalLayout gap="5"/>
            </s:layout>
            <mx:DateField id="endDate" width="150"  formatString="YYYY-MM-DD" dayNames="{DateUtil.dayNames}" monthNames="{DateUtil.monthNames}" tabIndex="7" />
            <s:Label text="*" color="red"/>
        </s:FormItem>
        <s:FormItem  label="项目状态:" textAlign="right">
            <s:DropDownList id="statusDownList" width="100%" labelField="label" selectedIndex="0" dataProvider="{ToolUtil.projectstatus}" tabIndex="8" ></s:DropDownList>
        </s:FormItem>

		<s:FormItem>
				<s:layout>
					<s:HorizontalLayout gap="10"/>
				</s:layout>
				<s:Button label="保存" click="save()" chromeColor="red" color="#ffffff" height="25"  tabIndex="10">
					
				</s:Button>
				<s:Button label="放弃" click="closeWin()" chromeColor="#ffffff" color="#000000" height="25">
					
				</s:Button>
		</s:FormItem>
	</s:Form>
</window:EfficientTitleWindow>
