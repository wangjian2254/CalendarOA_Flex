<?xml version="1.0" encoding="utf-8"?>
<window:EfficientTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" x="-1000" y="100" width="{getWindowWidth}"
                             height="{getWindowHeight}"  title="{titlestr}" creationComplete="init()"
                             xmlns:uicontrol="uicontrol.*" xmlns:window="control.window.*">
	<fx:Script>
		<![CDATA[
			import events.ChangeJoinUserEvent;
			import events.ChangeMenuEvent;
			import events.ChangeUserEvent;
			
			import httpcontrol.HttpServiceUtil;

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.rpc.events.ResultEvent;

			import util.DateUtil;
			import util.ScheduleUtil;
			import util.ToolUtil;

            public function get getWindowHeight():Number{
                return windowGroup.height;
            }
            public function get getWindowWidth():Number{
                return windowGroup.width;
            }
			[Bindable]
			public var titlestr:String="创建任务";
			
			[Bindable]
			public var startDateValue:Date=new Date();
			[Bindable]
			public var endDateValue:Date=new Date();
			
			[Bindable]
			public var schedulData:Object=null;

            [Bindable]
            private var myproject:ArrayCollection = new ArrayCollection();

			[Bindable]
			private var timelist:ArrayCollection = new ArrayCollection([{"value":"0000","text":"凌晨 00:00"}]);
			[Bindable]
			private var warninglist:ArrayCollection = new ArrayCollection([{"value":1,"text":"分钟"},{"value":60,"text":"小时"},{"value":60*24,"text":"天"},{"value":60*24*7,"text":"周"}]);
//			[Bindable]
//			private var warninglist2:ArrayCollection = new ArrayCollection([{"value":0,"text":"当天"},{"value":24*60,"text":"提前一天"},{"value":24*60*2,"text":"提前二天"},{"value":24*60*3,"text":"提前三天"},{"value":24*60*4,"text":"提前四天"},{"value":24*60*7,"text":"提前一星期"}]);
			[Bindable]
			private var endtimelist:ArrayCollection = new ArrayCollection();

            [Bindable]
            private var tasklist:ArrayCollection = new ArrayCollection();

            [Bindable]
            private var departmentList:ArrayCollection = new ArrayCollection();

			
			private var selectColor:Number =0x00CCFF;


			
			public function init():void{
                if(schedulData==null){
                    windowGroup.removeElement(chatControl);
                }


				//审核者 有资格修改任务
				dopanel.visible = (schedulData==null||schedulData.checker==ToolUtil.sessionUser.username)?true:false;
				// 负责人有资格修改任务

                //设置 按钮可见性

				// 设置 负责人
                // 设置 审核人
                //标题
                //子任务
                //颜色
                //开始时间
                //截止时间
                //重复方式
                //隶属项目
                //
                //
                //
                //
                //
                //
                //
                //




				
				btnDel.visible=false;
				if(schedulData!=null){


					if(schedulData.is_all_day){
						is_all_day.selected = schedulData.is_all_day;
						startDateValue = DateField.stringToDate(schedulData.startdate,"YYYYMMDD");
						endDateValue = DateField.stringToDate(schedulData.startdate,"YYYYMMDD");
					}else{
						startDateValue = DateUtil.parseDate(schedulData.startdate+schedulData.time_start);
						endDateValue = DateUtil.parseDate(schedulData.startdate+schedulData.time_end);
						
					}
					startDate.selectedDate = startDateValue;
					if(schedulData.enddate){
						endDate.selectedDate = DateField.stringToDate(schedulData.enddate,"YYYYMMDD")
						
					}else{

					}
					
					scheduleTitle.text = schedulData.title;
					repeatType.selectedValue = schedulData.repeat_type;
					repeatChange();

					
					colorClick(schedulData.color);

					changeUsers();
					titlestr = schedulData.title;

					
				}
				
				
				
				timelist.removeAll();
				for(var i:Number=0;i<24;i++){
					var h:String ="0"+i;
					var s:String = "凌晨 ";
					if(i>=5&&i<9){
						s="上午 ";
					}
					if(i>=9&&i<15){
						s="中午 ";
					}
					if(i>=15&&i<18){
						s="下午 ";
					}
					if(i>=18){
						s="晚上 ";
					}
					
					timelist.addItem({"value":h.substring(h.length-2)+"00","text":s+h.substring(h.length-2)+":00"});
					timelist.addItem({"value":h.substring(h.length-2)+"30","text":s+h.substring(h.length-2)+":30"});
				}
				
				try{
					var index:Number=startDateValue.hours*2;
					if(startDateValue.minutes>=30){
						index+=1;
					}
					startTime.selectedItem = timelist.getItemAt(index);	
					endtimelist.removeAll();
					for(index+=1;index<timelist.length;index++){
						endtimelist.addItem(timelist.getItemAt(index));
						if(timeStr.format(endDateValue)>=timelist.getItemAt(index).value){
							endTime.selectedItem = timelist.getItemAt(index);
						}
					}
					endtimelist.addItem({"value":"2359","text":"24:00"});
					if(endtimelist.length==1){
						endTime.selectedIndex=0;
					}
				}catch(error:Error){
					
				}

                repeatChange();


                tasklist.addItem({});

			}
			
			private function getData():Object{
				var obj:Object=new Object();
				if(schedulData!=null&&schedulData.hasOwnProperty("id")){
					obj.id = schedulData["id"];
				}
				obj.title=scheduleTitle.text;
                //子任务
				obj.startdate = datestr.format(startDate.selectedDate);

					obj.enddate = datestr.format(endDate.selectedDate);

				obj.is_all_day = is_all_day.selected;
				if(!is_all_day.selected){
					obj.time_start = startTime.selectedItem.value;
					obj.time_end = endTime.selectedItem.value;
				}
				obj.repeat_type = repeatType.selectedValue;
				
				obj.repeat_date = new Array();
				if(repeatType.selectedValue=="weekly"){
					for(var m:Number=0;m<dayTile.numElements;m++){
						if((dayTile.getElementAt(m) as CheckBox).selected){
							if(m==0){
								obj.repeat_date.push(6);
							}
								obj.repeat_date.push(m-1);
						}
					}
				}
				if(repeatType.selectedValue=="monthly"){
					for(m=0;m<dayTile.numElements;m++){
						if((dayTile.getElementAt(m) as CheckBox).selected){
							obj.repeat_date.push(m+1);
						}
					}
				}
				obj.color = selectColor;
				obj.projectid = projectDownList.selectedItem.id;
				obj.users = new Array();

				
				return obj;
			}
			
			public function save():void{
				if(this.scheduleTitle.text==""||this.scheduleTitle.text=="任务标题"){
					scheduleTitle.selectAll();
					Alert.show("请填写任务标题。","提示");
					return;
				}
				if(startDate.selectedDate==null){
					Alert.show("请选择开始时间。","提示");
					startDate.open();
					return;
				}

				
				
				
				HttpServiceUtil.getCHTTPServiceAndResult("/ca/updateSchedule",saveResult,"POST").send(getData());
					
				
			}
			
			private function saveResult(result:Object,e:ResultEvent):void{
				if(result.success){
//					if(schedulData==null){
//						schedulData = getData();
//					}
					schedulData = result.result;
					titlestr = schedulData.title;
					FlexGlobals.topLevelApplication.dispatchEvent(new ChangeUserEvent(ChangeUserEvent.ChangeUser_EventStr,ToolUtil.sessionUser,true));
					ScheduleUtil.clearNewSchedule();
					init();
				}
			}
			
			public function refresh():void{
				var start:Number=timelist.getItemIndex(startTime.selectedItem);
				endtimelist.removeAll();
				for(var i:Number = start+1;i<timelist.length;i++){
					endtimelist.addItem(timelist.getItemAt(i));
					if(timeStr.format(endDateValue)>=timelist.getItemAt(i).value){
						endTime.selectedItem = timelist.getItemAt(i);
					}
				}
			}
			
			private function repeatChange():void{
				if(repeatType.selectedValue=="none"||repeatType.selectedValue=="daily"||repeatType.selectedValue=="yearly"){
					dayTile.visible = false;
                    dayPanel.visible=false;
                    dayPanel.height=0;
				}else{
					dayTile.visible = true;
					if(repeatType.selectedValue=="weekly"){
                        dayPanel.visible=true;
                        dayPanel.height=25;
						dayTile.removeAllElements();
						for(var i:Number=0;i<7;i++){
							var cb:CheckBox = new CheckBox();
							switch(i){
								case 0:
									cb.label = "日";
									break;
								case 1:
									cb.label = "一";
									break;
								case 2:
									cb.label = "二";
									break;
								case 3:
									cb.label = "三";
									break;
								case 4:
									cb.label = "四";
									break;
								case 5:
									cb.label = "五";
									break;
								case 6:
									cb.label = "六";
									break;
							}
							
							cb.selected=false;
							cb.height = 25;
							dayTile.addElement(cb);
						}
						for (var index:Number = 0;schedulData!=null?(schedulData.hasOwnProperty("repeat_date")? index<schedulData.repeat_date.length:false):false;index++){
							try{
								if(schedulData.repeat_date[index]==6){
									
									(dayTile.getElementAt(0) as CheckBox).selected = true;
								}else{
									(dayTile.getElementAt(Number( schedulData.repeat_date[index])+1) as CheckBox).selected = true;
								}
							}catch(e:Error){
							}
						}
						
					}
					
					if(repeatType.selectedValue=="monthly"){
						dayTile.removeAllElements();
                        dayPanel.visible=true;
						dayPanel.height = 130;
						for( i=0;i<32;i++){
							cb = new CheckBox();
							
							cb.label = ""+(i+1);
							cb.height = 25;
							cb.selected=false;
							dayTile.addElement(cb);
						}
						for (index= 0;schedulData!=null?(schedulData.hasOwnProperty("repeat_date")? index<schedulData.repeat_date.length:false):false;index++){
							try{
								(dayTile.getElementAt(Number( schedulData.repeat_date[index])-1) as CheckBox).selected = true;
							}catch(e:Error){
							}
						}
					}
				}
				this.invalidateDisplayList();
			}
			
			private function colorChange():void{
				colorClick(colorPicker.selectedColor);
			}
			
			private function colorClick(c:Number):void{
				selectColor = c;
				color0.setStyle("backgroundColor",c);
				color1.setStyle("borderColor",0xffffff);
				color2.setStyle("borderColor",0xffffff);
				color3.setStyle("borderColor",0xffffff);
				color4.setStyle("borderColor",0xffffff);
				color5.setStyle("borderColor",0xffffff);
				color6.setStyle("borderColor",0xffffff);
				color7.setStyle("borderColor",0xffffff);
				color8.setStyle("borderColor",0xffffff);
				color9.setStyle("borderColor",0xffffff);
				color10.setStyle("borderColor",0xffffff);
				switch(c){
					case 0xaecfea:
						color1.setStyle("borderColor",0x000000);
						break;
					case 0x5484ed:
						color2.setStyle("borderColor",0x000000);
						break;
					case 0xa4bdfc:
						color3.setStyle("borderColor",0x000000);
						break;
					case 0x46d6db:
						color4.setStyle("borderColor",0x000000);
						break;
					case 0x7ae7bf:
						color5.setStyle("borderColor",0x000000);
						break;
					case 0x51b749:
						color6.setStyle("borderColor",0x000000);
						break;
					case 0xfbd75b:
						color6.setStyle("borderColor",0x000000);
						break;
					case 0xffb878:
						color6.setStyle("borderColor",0x000000);
						break;
					case 0xff887c:
						color6.setStyle("borderColor",0x000000);
						break;
					case 0xdbadff:
						color6.setStyle("borderColor",0x000000);
						break;
					default:
						if(colorPicker.selectedColor!=c){
							colorPicker.selectedColor=c;
						}
					
				}
			}
			
			private function delJoin(e:ChangeJoinUserEvent):void{
//				joinUserGrid.invalidateList();
			}
			
			public function changeUsers():void{
//				users.removeAllElements();
//				var address:ContactItem = null;
//				for each(var obj:Object in contactsList){
//					if(obj.selected){
//						address = new ContactItem();
//						address.tileGroup = users;
//						address.modifyEnable = dopanel.visible;
//						address.userData = obj;
//						address.addEventListener(ChangeJoinUserEvent.ChangeUser_EventStr,delJoin);
//						users.addElement(address);
//					}
//				}
			}
			

			
			
			private function delAsk():void{
				if(schedulData!=null &&schedulData.id){
				
					Alert.show("确认删除当前任务?", "提示", Alert.YES | Alert.NO, null, del);
				}else{
					closeWin();
				}
				
			}
			//删除任务
			private function del(e:mx.events.CloseEvent):void
			{
				if (e.detail == Alert.YES){
					var data:Object = new Object();
					data["id"] = schedulData.id;
					HttpServiceUtil.getCHTTPServiceAndResult("/ca/delSchedule",delResult,"POST").send(data);
					
					
				}
			}
			
			private function delResult(result:Object,e:ResultEvent):void{
				if(result.success){
					
					FlexGlobals.topLevelApplication.dispatchEvent(new ChangeUserEvent(ChangeUserEvent.ChangeUser_EventStr,ToolUtil.sessionUser,true));
					closeWin();
				}
			}
			
			
			private function openAddress():void{
				var obj:Object=new Object();
				var evt:ChangeMenuEvent=new ChangeMenuEvent(ChangeMenuEvent.ChangeMenu_EventStr,"contact",obj,true)
				FlexGlobals.topLevelApplication.dispatchEvent(evt);
			}
			
			private function refreshAddress(result:Object,e:ResultEvent):void{

				
				changeUsers();
			}
			
			private function gotoZentao():void{
				if(schedulData.zentaourl){
					var request:URLRequest=new URLRequest(schedulData.zentaourl);  
					navigateToURL(request,"_blank");
					return;
				}
			}

        private function changeProjectByDepart():void{
            myproject.removeAll();
            myproject.addItem({id:0,name:"无项目"});
            for each(var item:Object in ToolUtil.projectList){
                if(item.department=departmentDownList.selectedItem.id){
                    myproject.addItem(item);
                }
            }
            // todo:责任人范围，修改。只能在部门内之间选择
        }
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="repeatType" change="repeatChange()"/>
		<mx:DateFormatter id="datestr" formatString="YYYYMMDD" >
			
		</mx:DateFormatter>
		<mx:DateFormatter id="timeStr" formatString="JJNN" >
			
		</mx:DateFormatter>
	</fx:Declarations>
	<s:HGroup id="windowGroup" width="100%" height="100%">
        <s:Form width="500" height="100%" id="schedulePanel">
            <s:layout>
                <s:FormLayout gap="0"  ></s:FormLayout>
            </s:layout>
            <s:FormItem label="标题：" id="titleItem" height="50">
                <s:TextArea id="scheduleTitle" width="100%" height="45" prompt="任务标题">
                </s:TextArea>
            </s:FormItem>
            <s:FormItem label="时间段："  height="25">
                <s:layout>
                    <s:HorizontalLayout gap="5">

                    </s:HorizontalLayout>
                </s:layout>
                <mx:DateField id="startDate" width="100" selectedDate="{startDateValue}" formatString="YYYY-MM-DD" dayNames="{DateUtil.dayNames}" monthNames="{DateUtil.monthNames}" />
                <s:CheckBox label="设置具体时间" id="is_all_day">
                </s:CheckBox>
                <mx:ComboBox id="startTime" visible="{is_all_day.selected}" dataProvider="{timelist}" labelField="text" width="90"  change="refresh()"  >

                </mx:ComboBox>
                <s:Label text="到" height="100%" verticalAlign="middle" visible="{is_all_day.selected}" />
                <mx:ComboBox id="endTime"  visible="{is_all_day.selected}"  dataProvider="{endtimelist}" labelField="text" width="90"   >

                </mx:ComboBox>
            </s:FormItem>
            <s:FormItem label="结束时间：" height="25">
                <s:layout>
                    <s:HorizontalLayout gap="5">

                    </s:HorizontalLayout>
                </s:layout>
                <mx:DateField id="endDate" width="100" selectedDate="{endDateValue}" formatString="YYYY-MM-DD" dayNames="{DateUtil.dayNames}" monthNames="{DateUtil.monthNames}" />

            </s:FormItem>
            <s:FormItem label="重复" height="25">
                <s:layout>
                    <s:HorizontalLayout gap="5">

                    </s:HorizontalLayout>
                </s:layout>
                <s:RadioButton group="{repeatType}" label="不重复" value="none" selected="true">
                </s:RadioButton>
                <s:RadioButton group="{repeatType}" label="每天" value="daily" >
                </s:RadioButton>
                <s:RadioButton group="{repeatType}" label="每周" value="weekly">
                </s:RadioButton>
                <s:RadioButton group="{repeatType}" label="每月" value="monthly">
                </s:RadioButton>
                <s:RadioButton group="{repeatType}" label="每年" value="yearly">
                </s:RadioButton>
            </s:FormItem>
            <s:FormItem id="dayPanel"  label="重复时间：" height="25">
                <s:TileGroup id="dayTile" width="100%" height="100%" requestedColumnCount="7" horizontalGap="10" verticalGap="0"   >
                    <s:CheckBox label="一"  />
                    <s:CheckBox label="二" />
                    <s:CheckBox label="三" />
                    <s:CheckBox label="四" />
                    <s:CheckBox label="五" />
                    <s:CheckBox label="六" />
                    <s:CheckBox label="日" />
                </s:TileGroup>
            </s:FormItem>

            <s:FormItem label="分解任务：" height="115">
                <uicontrol:AddressList id="childAddressList" dataProvider="{tasklist}" itemRenderer="uicontrol.renderer.ChildrenTaskRenderer" width="100%" height="100">
                </uicontrol:AddressList>
            </s:FormItem>
            <s:FormItem label="颜色：" height="25">
                <s:layout>
                    <s:HorizontalLayout gap="3">

                    </s:HorizontalLayout>
                </s:layout>
                <s:BorderContainer id="color0" backgroundColor="#aecfea" borderColor="#000000" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:Label text="|" fontWeight="bold" fontSize="18" textAlign="center"  width="10" height="25" verticalAlign="middle"/>
                <s:BorderContainer id="color1" click="colorClick(0xaecfea)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#aecfea" borderColor="#000000" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color2" click="colorClick(0x5484ed)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#5484ed" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color3" click="colorClick(0xa4bdfc)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#a4bdfc" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color4" click="colorClick(0x46d6db)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#46d6db" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color5" click="colorClick(0x7ae7bf)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#7ae7bf" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color6" click="colorClick(0x51b749)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#51b749" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color7" click="colorClick(0xfbd75b)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#fbd75b" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color8" click="colorClick(0xffb878)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#ffb878" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color9" click="colorClick(0xff887c)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#ff887c" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <s:BorderContainer id="color10" click="colorClick(0xdbadff)" useHandCursor="true" buttonMode="true"  mouseEnabled="true" backgroundColor="#dbadff" borderColor="#ffffff" borderWeight="2" width="20" height="20">
                </s:BorderContainer>
                <mx:ColorPicker id="colorPicker" color="#010000" selectedColor="#ffffff" change="colorChange()"
                                symbolColor="#030002">

                </mx:ColorPicker>
            </s:FormItem>
            <s:FormItem label="项目：" height="25">
                <s:layout>
                    <s:HorizontalLayout gap="10">
                    </s:HorizontalLayout>
                </s:layout>
                <s:DropDownList id="departmentDownList" labelField="lable" selectedIndex="0" dataProvider="{ToolUtil.myDepartmentList}" change="changeProjectByDepart()" ></s:DropDownList>
                <s:DropDownList id="projectDownList" labelField="name" dataProvider="{myproject}"></s:DropDownList>
            </s:FormItem>
            <s:FormItem label="责任人：" height="35">
                <s:Scroller width="100%"  height="100%" >
                    <s:HGroup id="usersGroup" width="100%" height="100%">

                    </s:HGroup>
                </s:Scroller>
            </s:FormItem>
            <s:FormItem id="authorpanel" label="审核人：" height="25" >
                <s:layout>
                    <s:HorizontalLayout gap="10">
                    </s:HorizontalLayout>
                </s:layout>
                <s:DropDownList id="checkerDownList" labelField="name" dataProvider="{ToolUtil.memberList}"></s:DropDownList>
                <s:CheckBox label="无需审核" id="need_check">
                </s:CheckBox>
            </s:FormItem>
            <s:FormItem label="提醒：" height="75">
                <s:layout>
                    <s:TileLayout columnAlign="justifyUsingGap">
                    </s:TileLayout>
                </s:layout>
                <s:CheckBox id="alertBox0" label="到点提醒" ></s:CheckBox>
                <s:CheckBox id="alertBox1" label="提前5分钟"></s:CheckBox>
                <s:CheckBox id="alertBox2" label="提前10分钟"></s:CheckBox>
                <s:CheckBox id="alertBox3" label="提前15分钟"></s:CheckBox>
                <s:CheckBox id="alertBox4" label="提前30分钟"></s:CheckBox>
                <s:CheckBox id="alertBox5" label="提前45分钟"></s:CheckBox>
                <s:CheckBox id="alertBox6" label="提前1小时"></s:CheckBox>
                <s:CheckBox id="alertBox7" label="提前2小时"></s:CheckBox>
                <s:CheckBox id="alertBox8" label="提前4小时"></s:CheckBox>
                <s:CheckBox id="alertBox9" label="提前1天"></s:CheckBox>
                <s:CheckBox id="alertBox10" label="提前2天"></s:CheckBox>
                <s:CheckBox id="alertBox11" label="提前1周"></s:CheckBox>
            </s:FormItem>


            <mx:ControlBar  id="dopanel">
                <s:Button chromeColor="red" label="保存" height="25" color="#ffffff" click="save()" />
                <s:Button id="btnDel" chromeColor="#cccccc" label="舍弃" height="25" color="#000000" click="delAsk()" />
            </mx:ControlBar>
        </s:Form>

        <control:ChatControl id="chatControl" width="100%" height="100%"   visible="{schedulData}">

        </control:ChatControl>
	</s:HGroup>

</window:EfficientTitleWindow>
