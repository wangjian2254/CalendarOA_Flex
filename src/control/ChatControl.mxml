<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" width="700" height="700"  xmlns:uicontrol="uicontrol.*">
	<fx:Script source="../asfile/chatWindowAs.as" />
	<fx:Script>
		<![CDATA[
		import control.window.ImagePanel;

		import events.CloseContainerEvent;

		private var isread:Boolean = false;


		//        [Bindable]
		//        public var type:String = "d";//部门 为“d” 任务为 “t” 讨论组为：“g”
		override public function releaseListener():void {
			Pomelo.getIns().removeEventListener('onChat', chatHandler);
			Pomelo.getIns().removeEventListener('quiteChannel', quiteChannelHandler);
			Pomelo.getIns().removeEventListener('joinChannel', joinChannelHandler);
		}


		private function init_owner():void {
			chatList.addEventListener(UploadFileEvent.SHOWBIGIMAGE, showBigImage);

		}


		override public function closeContainer(e:CloseContainerEvent):void {
			Pomelo.getIns().removeEventListener('onChat', chatHandler);
			if (ToolUtil.currentChannel == chatUser.channel) {
				ToolUtil.currentChannel = null;
			}
			if (e == null) {
				e = new CloseContainerEvent(CloseContainerEvent.Close_EventStr, this, true);
			}
			dispatchEvent(e);
		}


		// 重新进入时执行
		override public function reloadParamData(e:FlexEvent):void {
			if (param) {
				if (param.hasOwnProperty("messageType")) {

				}

			}
			super.reloadParamData(e);
			if (isread) {
				flagTimeline();
				isread = false;
			}
		}

		private var notice:ImagePanel;

		private function closeImage():void {
			if (notice == null) {
				return;
			}
			notice.closeWin();
		}

		private function showPic(s:Bitmap, defaultfilename:String = ""):void {
			if (s == null) {
				var event:UploadFileEvent = new UploadFileEvent(UploadFileEvent.UPLOAD, {
					filename: defaultfilename,
					status: 1
				}, bar);
				event.data.ownertype = chatUser.type;
				event.data.ownername = chatUser.name.substr(0, 60);
				event.data.ownerpk = chatUser.id;
				proceedWithUpload(event);
				return;
			}
			var notice:ImagePanel = PopUpManager.createPopUp(this, ImagePanel, false) as ImagePanel;
			if (chatUser.type == 'p' || chatUser.type == 'g') {
				notice.filestatus = 0;
			}
			notice.imagedata = s;
			notice.imgname = defaultfilename;
			notice.addEventListener(UploadFileEvent.UPLOAD, function (event:UploadFileEvent):void {
				event.data.ownertype = chatUser.type;
				event.data.ownername = chatUser.name.substr(0, 60);
				event.data.ownerpk = chatUser.id;
				proceedWithUpload(event);
			});
		}

		private function showBigImage(e:UploadFileEvent):void {
			var notice:ImagePanel = PopUpManager.createPopUp(this, ImagePanel, false) as ImagePanel;


			notice.imagesrc = e.data.toString();
			notice.editfilename = false;
		}

		private function keyUp_handler(e:KeyboardEvent):void {
			if (e.keyCode == 13) {
				sendBTN_clickHandler();
			}
		}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script source="../asfile/uploadfiles.as" />

	<s:VGroup gap="2" paddingBottom="10" paddingRight="10" paddingLeft="10" paddingTop="0" width="100%" height="100%">
		
	<s:HGroup id="chatTitleContainer" width="100%" height="41" verticalAlign="middle"  >
		
		<uicontrol:HeadImage id="head" width="35" height="35"/>
		<s:Label id="nameLabel" textDecoration="underline"  ></s:Label>
		
		<mx:Spacer width="100%" height="10"/>
		
	</s:HGroup>
	<s:HGroup id="horGroup" width="100%" height="100%" gap="8">
		<s:VGroup   width="100%" height="100%" >
			
			<uicontrol:AddressList id="chatList" borderColor="#d6d6d6"  dataProvider="{chatsArr}" chatChannel="{chatUser}"
								   listItemClick="chatItemClick_handler(event)"
								   itemRenderer="uicontrol.renderer.ChatItemRenderer" width="100%" height="100%">
			</uicontrol:AddressList>
			
			<!--<s:TextArea id="ti" width="100%" height="50"-->
			<!--paddingTop="10" paddingBottom="5" paddingLeft="5" paddingRight="5"-->
			<!--focusEnabled="true" fontLookup="device"-->
			<!--fontFamily="simsun,MINGLIU"-->
			<!--alignmentBaseline="ideographicCenter"-->
			<!--color="{cp.selectedColor}"-->
			<!--fontWeight="{bBTN.selected?'bold':'normal'}"-->
			<!--fontStyle="{iBTN.selected?'italic':'normal'}"-->
			<!--textDecoration="{uBTN.selected?'underline':'none'}"-->
			<!--fontSize="{ns.value}"-->
			<!--editable="true"-->
			<!--keyUp="pressEnter(event)"-->
			<!--/>-->
			<s:HGroup width="100%" height="41" horizontalAlign="left" verticalAlign="middle" gap="3">
				<mx:ColorPicker id="cp"/>
				<s:Button styleName="btnTuPian" buttonMode="true" toolTip="上传图片" click="uploadFile('pic')" />
				<s:Button styleName="btnWenJian" buttonMode="true" toolTip="发送文件" click="uploadFile('file')" />
				<s:Button styleName="btnShangChuan" buttonMode="true" toolTip="上传文件"  click="uploadFile('file')" />
				<s:Spacer width="100%">
					
				</s:Spacer>
				<s:Button id="scheduleButton" label="显示任务" width="100" buttonMode="true" styleName="btnChat2" click="showSchedule()" includeInLayout="{scheduleButton.visible}"  />
				<s:Button id="quiteButton" label="退出讨论组" width="100" buttonMode="true" styleName="btnChat2" click="quiteGroup()" includeInLayout="{quiteButton.visible}"  />
				<s:Button id="memberButton" label="成员管理" width="100" buttonMode="true" styleName="btnChat2" click="memberGroup()" includeInLayout="{memberButton.visible}"  />
				<s:Button id="usersButton" label="创建讨论组" width="100" buttonMode="true" styleName="btnChat2" click="createGroup()" includeInLayout="{usersButton.visible}"  />
			</s:HGroup>
			<s:TextArea  id="ti" height="54" borderColor="#d6d6d6" prompt="{ChatManager.pomelo_online?'回车(Enter)发送':'即时通信服务正在维护中，目前不可用。'}" width="100%"  color="{cp.selectedColor}" enabled="{ChatManager.pomelo_online}" keyUp="keyUp_handler(event)" />
			
			<s:HGroup width="100%" height="44" horizontalAlign="right" verticalAlign="middle">
				<s:Button  label="关闭" color="#ffffff" width="60" styleName="btnChat" buttonMode="true"  height="28" click="{ti.text='';}"  />
				
				<s:Button  label="发送" color="#ffffff" width="60" chromeColor="red" height="28" click="sendBTN_clickHandler()"  />
			</s:HGroup>
			
		</s:VGroup>
		
		<uicontrol:AddressList  id="addressList" borderColor="#d6d6d6"  dataProvider="{chatUser.members}"  visible="{bigPanel}" includeInLayout="{bigPanel}"
								doubleClickEnabled="true" doubleClick="chatUserPanel()" toolTip="双击发送信息" listItemClick="listItemClick_handler(event)"
								itemRenderer="uicontrol.renderer.AddressItemRenderer" width="150" height="100%">
		</uicontrol:AddressList>
		
		
	</s:HGroup>
	</s:VGroup>
	<uicontrol:CProgressBar id="bar" width="100%" height="100%" visible="false" />

</control:CBorderContainer>
