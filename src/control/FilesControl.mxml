<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" 
						  xmlns:uicontrol="uicontrol.*"
						  width="700" height="500" >
	
	<fx:Script>
		<![CDATA[
        import events.CloseContainerEvent;
        import events.PageChangeEvent;

        import httpcontrol.HttpServiceUtil;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.FlexEvent;
        import mx.events.ItemClickEvent;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import util.ToolUtil;

        [Bindable]
        private var list:ArrayCollection = new ArrayCollection();

        override public function releaseListener():void {
        }

        override public function init(e:FlexEvent):void {


        }

        override public function closeContainer(e:CloseContainerEvent):void {
            dispatchEvent(e);

        }

        private function getDataResult(o:Object, e:ResultEvent):void {
            if (o && o.success) {
                list = new ArrayCollection(o.result as Array);
            }

        }

        public function initpassword(e:Event):void {
            var data:Object = getData();
            if (data == null) {
                return;
            }
            HttpServiceUtil.getCHTTPServiceAndResult("/ft/initUser", initUserResult, "POST").send(data);
        }

        private function initUserResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                Alert.show(result.message, "提示");
            }
        }


        public function getData():Object {
            var o:Object = {};


            return o;
        }

        private function delContactAsk():void {

            Alert.show("确认移除选中的联系人?", "提示", Alert.YES | Alert.NO, null, delContact);

        }

        //删除日程
        private function delContact(e:CloseEvent):void {
            if (e.detail == Alert.YES) {
                var data:Object = new Object();
                var username:Array = new Array();
                for each(var item:Object in ToolUtil.contactsList) {
                    if (item.selected) {
                        username.push(item.username);
                    }
                }
                data["usernames"] = username;
                data["do"] = "out";
                HttpServiceUtil.getCHTTPServiceAndResult("/ca/joinContacts", ToolUtil.contactsRefresh, "POST").send(data);


            }
        }

        private function addContact():void {
            var data:Object = new Object();
            var username:Array = new Array();
            for each(var item:Object in list) {
                if (item.selected) {
                    username.push(item.username);
                }
            }
            if (username.length == 0) {
                Alert.show("请选择用户", "警告");
                return;
            }
            data["usernames"] = username;
            data["do"] = "join";
            HttpServiceUtil.getCHTTPServiceAndResult("/ca/joinContacts", ToolUtil.contactsRefresh, "POST").send(data);

        }



        private function searchResult(result:Object, e:ResultEvent):void {
            if (result.result) {
                list.removeAll();
                list.addAll(new ArrayCollection(result.result as Array));
            }

        }

        private function loadDataFault(e:FaultEvent):void {
            Alert.show('操作失败', "提示");
        }




        public function add():void {
        }

        public function del():void {
            var userArr:ArrayCollection = new ArrayCollection();
            var obj:Object;
            var item:Object;
            for (var i:int = list.length - 1; i >= 0; i--) {
                item = list.getItemAt(i);
                if (!item.selected) {
                    continue;
                }
                obj = new Object();
                if (item.hasOwnProperty("id")) {
                    obj.id = item.id;
                    userArr.addItem(obj);
                }
                //					obj.name=item.name;

            }
            if (userArr.length > 0) {
//					ToolUtil.deptRefresh(refresh);
//					ToolUtil.areaRefresh(refresh);
//					ToolUtil.userRefresh(refresh);
                //					HttpServiceUtil.getCHTTPServiceAndResultAndFault("/htcsgl/_100_BaseInfosAction_deletedept.action",loadDataResult,loadDataFault,"POST").send(userArr);
            }
        }

        public function show(obj:Object):void {
        }


        public function refresh(result:Object, e:ResultEvent):void {
            if (result.success) {
                add();
                init(null);
                //					InfoUtil.userRefresh(refreshScx);
            }
        }



        [Bindable]
        private var buttonArr:ArrayCollection = new ArrayCollection([
            {'label': '新增', 'ico': addimg},
            {'label': '修改', 'ico': saveimg},
            {'label': '同步数据', 'ico': refreshimg}
        ]);

        private function pagechange(e:PageChangeEvent):void {

            //				datalist.dataProvider = e.Filter(datas)

        }
        ]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="uTypeRadio" >
			
		</s:RadioButtonGroup>
	</fx:Declarations>

</control:CBorderContainer>
